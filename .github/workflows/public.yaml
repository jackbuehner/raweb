name: Deploy to GitHub Pages

on:
  push:
    paths:
      - "frontend/**"
      - ".github/workflows/public.yaml"
  pull_request_target:
    types: [opened, synchronize, reopened]
    paths:
      - "frontend/**"
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

concurrency: ci-${{ github.ref }}

jobs:
  build-and-preview:
    runs-on: ubuntu-latest
    name: Build web app (frontend)

    outputs:
      preview_success: ${{ steps.push.outputs.success }}
      target_name: ${{ steps.context.outputs.target_name }}
      skipped: ${{ steps.push.outputs.reason != '' && steps.push.outputs.success != 'true' }}
      failed: ${{ steps.build.outcome != 'success' || (steps.push.outputs.success != 'true' && steps.push.outputs.reason == '') }}
      deploy_url: ${{ steps.push.outputs.deploy_url }}

    steps:
      - name: Find existing PR comment
        if: github.event_name == 'pull_request'
        id: find_comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: "<!-- DEPLOY-PREVIEW-COMMENT -->"

      - name: Update status
        if: github.event_name == 'pull_request'
        id: pr_comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          body: |
            <!-- DEPLOY-PREVIEW-COMMENT -->
            üöÄ **Deployment started...**
            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          edit-mode: replace

      - name: Get GitHub Pages settings (detect custom domain)
        id: pages
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse custom domain
        id: domain
        run: |
          domain=$(echo '${{ steps.pages.outputs.data }}' | jq -r '.cname // ""')
          echo "custom_domain=${domain}" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: |
            ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || github.ref }}

      - name: Fetch and check out merge ref (for PR only)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          git fetch origin +refs/pull/${{ github.event.pull_request.number }}/merge
          git checkout FETCH_HEAD

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.15.0"
          cache: "pnpm"
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        run: cd frontend && pnpm install

      - name: Determine deployment target
        id: context
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "target_name=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            echo "target_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Update status
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id || steps.pr_comment.outputs.comment-id }}
          body: |
            <!-- DEPLOY-PREVIEW-COMMENT -->
            üèóÔ∏è **Building web app...**
            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          edit-mode: replace

      - name: Build the frontend
        id: build
        env:
          CUSTOM_DOMAIN: ${{ steps.domain.outputs.custom_domain }}
          TARGET_NAME: ${{ steps.context.outputs.target_name }}
        continue-on-error: true
        run: |
          # custom domain in use ‚Üí no repository prefix
          if [ -n "${CUSTOM_DOMAIN}" ]; then
            if [ "${{ github.ref_name }}" = "master" ]; then
              RAWEB_PUBLIC_BASE="/"
            else
              RAWEB_PUBLIC_BASE="/deploy-preview/${TARGET_NAME}/"
            fi

          # otherwise, use repository prefix, which is required with the GitHub Pages default domain
          else
            # Default GitHub Pages domain (includes repo name)
            if [ "${{ github.ref_name }}" = "master" ]; then
              RAWEB_PUBLIC_BASE="/${{ github.event.repository.name }}/"
            else
              RAWEB_PUBLIC_BASE="/${{ github.event.repository.name }}/deploy-preview/${TARGET_NAME}/"
            fi
          fi

          cd frontend
          echo "RAWEB_PUBLIC_BASE=${RAWEB_PUBLIC_BASE}" > .env
          echo "Building frontend with BASE=${RAWEB_PUBLIC_BASE}"
          pnpm run build --config vite.config.public.ts
          echo "success=true" >> $GITHUB_OUTPUT

      - name: Create 404.html
        if: steps.build.outcome == 'success'
        run: |
          sed -e "s|__REPO_NAME__|${{ github.event.repository.name }}|g" \
              -e "s|__REPO_OWNER__|${{ github.event.repository.owner.login }}|g" \
              .github/workflows/404.html > frontend/dist/404.html

      - name: Update status
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id || steps.pr_comment.outputs.comment-id }}
          body: |
            <!-- DEPLOY-PREVIEW-COMMENT -->
            üèóÔ∏è **Transferring build artifacts...**
            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          edit-mode: replace

      - name: Push to gh-pages branch
        id: push
        if: steps.build.outcome == 'success'
        env:
          CUSTOM_DOMAIN: ${{ steps.domain.outputs.custom_domain }}
          TARGET_NAME: ${{ steps.context.outputs.target_name }}
        continue-on-error: true
        run: |
          preview_dir="frontend/dist_deploy_previews/${TARGET_NAME}"
          mkdir -p "$preview_dir"
          cp -r frontend/dist/* "$preview_dir/" || exit 1

          git config user.name github-actions
          git config user.email github-actions@github.com

          set +e
          git fetch origin gh-pages
          fetch_status=$?
          set -e

          if [ $fetch_status -ne 0 ]; then
            git checkout --orphan gh-pages
          else
            git checkout gh-pages
          fi

          mkdir -p "deploy-preview/${TARGET_NAME}"
          cp -r "$preview_dir"/* "deploy-preview/${TARGET_NAME}/"

          # copy 404.html to the root of gh-pages
          cp frontend/dist/404.html 404.html

          git add deploy-preview/${TARGET_NAME}
          git add 404.html
          git commit -m "chore: update deploy preview for ${TARGET_NAME}" || echo "No changes"

          echo "Attempting to push to gh-pages..."
          if ! git push origin gh-pages; then
            echo "::warning::Skipping deploy preview ‚Äî no gh-pages permission."
            echo "success=false" >> $GITHUB_OUTPUT
            echo "reason=No permission to push to gh-pages" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "success=true" >> $GITHUB_OUTPUT

          if [ -n "${CUSTOM_DOMAIN}" ]; then
            echo "deploy_url=https://${CUSTOM_DOMAIN}/deploy-preview/${TARGET_NAME}/" >> $GITHUB_OUTPUT
          else
            echo "deploy_url=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/deploy-preview/${TARGET_NAME}/" >> $GITHUB_OUTPUT
          fi

      - name: Update status (successful build)
        if: github.event_name == 'pull_request' && steps.push.outputs.success == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id || steps.pr_comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            <!-- DEPLOY-PREVIEW-COMMENT -->
            ‚è≥ **Waiting for runner...**
            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Update status (skipped)
        if: github.event_name == 'pull_request' && steps.push.outputs.reason != '' && steps.push.outputs.success != 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id || steps.pr_comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            <!-- DEPLOY-PREVIEW-COMMENT -->
            ‚ö†Ô∏è **Deployment skipped**

            Reason: _${{ steps.push.outputs.reason }}_
            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Update status (failure)
        if: github.event_name == 'pull_request' && (steps.build.outcome != 'success' || (steps.push.outputs.success != 'true' && steps.push.outputs.reason == ''))
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id || steps.pr_comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            <!-- DEPLOY-PREVIEW-COMMENT -->
            ‚ùå **Deployment failed**

            There was an error during the build or deploy phase.
            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
      - name: Fail job
        if: github.event_name == 'pull_request' && (steps.build.outcome != 'success' || (steps.push.outputs.success != 'true' && steps.push.outputs.reason == ''))
        run: |
          echo "Build or push failed. Please check the logs for more details."
          exit 1

  deploy-pages:
    needs: build-and-preview
    if: |
      needs.build-and-preview.outputs.preview_success == 'true' &&
      needs.build-and-preview.outputs.skipped != 'true' &&
      needs.build-and-preview.outputs.failed != 'true'
    runs-on: ubuntu-latest
    name: Deploy site via GitHub Pages
    environment:
      name: ${{ github.ref_name == 'master' && 'Production' || (github.event_name == 'pull_request' && 'Review' || 'Development') }}
      url: ${{ needs.build-and-preview.outputs.deploy_url }}

    steps:
      - name: Find existing PR comment
        if: github.event_name == 'pull_request'
        id: find_comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: "<!-- DEPLOY-PREVIEW-COMMENT -->"

      - name: Update PR comment (deploying)
        if: github.event_name == 'pull_request' && steps.push.outputs.success == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            <!-- DEPLOY-PREVIEW-COMMENT -->
            üåê **Deploying...**
            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload gh-pages content as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Update PR comment (successfull deployment)
        if: ${{ github.event_name == 'pull_request' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            <!-- DEPLOY-PREVIEW-COMMENT -->
            ‚úÖ **Deployment successful**

            Preview URL: [${{ needs.build-and-preview.outputs.deploy_url }}](${{ needs.build-and-preview.outputs.deploy_url }})
            Wiki/Docs: [${{ needs.build-and-preview.outputs.deploy_url }}docs/](${{ needs.build-and-preview.outputs.deploy_url }}docs/)

            [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
